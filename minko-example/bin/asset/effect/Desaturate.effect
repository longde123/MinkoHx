{
	"name" : "desaturate",
	"attributes" : {
		"aPosition" : "geometry[@{geometryUuid}].position",
		"aUv"       : "geometry[@{geometryUuid}].uv"
		},
	"uniforms" : {
		"uBackBuffer" : "backBuffer"
		},
	"techniques" : [{
		"passes" : [{
		"vertexShader" : "
			#ifdef GL_ES
				precision mediump float;
			#endif
 
			attribute vec3 aPosition;
			attribute vec2 aUv;
 
			varying vec2 vVertexUv;
 
			void main(void)
			{
				vVertexUv = vec2(aUv.x, 1. - aUv.y);
 
				gl_Position = vec4(aPosition, 1) * vec4(1., 1., 1., .5);
			}
		",
		"fragmentShader" : "
			#ifdef GL_ES
				precision mediump float;
			#endif

			uniform sampler2D uBackBuffer;
 
			varying vec2 vVertexUv;
 
			void main()
			{
				vec4 pixel = texture2D(uBackBuffer, vVertexUv);
				float average = (pixel.r + pixel.g + pixel.b) / 3.0;
 
				gl_FragColor = vec4(average, average, average, 1.0);
			}
		"
		}]
	}]
}
